---
title: "supporting_evidence_p275"
format: html
editor: visual
---
### Tests of Supporting Evidence 

Sample invoices from the accounts receivable aging report and compare them to supporting documentation to see if they were billed in the correct amounts, to the correct customers, and on the correct dates. Trace invoices to shipping log. The auditors will match invoice dates to the shipment dates for those items in the shipping log, to see if sales are being recorded in the correct accounting period. This can include an examination of invoices issued after the period being audited, to see if they should have been included in a prior period.

This can be accomplished using t-tests that were introduced in interim testing.  Attribute sampling size is determined using Cohen's power analysis [@cohen1992power] which is implemented in R's *pwr* package, If discovery sampling suggests that a particular transaction stream is out of control, then attribute estimation will help us decide on the actual error rate of the systems that process this transaction stream.  Errors estimates from attribute samples may either be *rates of erroneous transactions* or from a monetary unit sampling perspective, can be *rates of monetary error in the transaction stream*.  We compute both in the following code chunk  


```{r  error=F, warning=F, message=F, warning=F, eval=T, echo=T}

library(readr)
library(pwr)
library(tidyverse)


size <- as.numeric(nrow(credit_sales_journal))  
## data set size
Delta <- .05*size                                 
## detect 5% occurrence error 
sigma <- .3*size                                  
## variability (guess ~1/3 rd) 
effect <- Delta/sigma



sample <- pwr.t.test(
  d=effect, 
  sig.level = 0.05, 
  power = .8,
  type="one.sample", 
  alternative="greater")                       ## look for overstatement of earnings


cat("\n \n Attribute sample size for occurrence of error = ", ceiling(sample$n))



size <- 
  as.numeric(
    sum(
      credit_sales_journal$sales_unit_price*
        credit_sales_journal$sales_count)) 
## data set size
mu <- 
  mean(
    credit_sales_journal$sales_unit_price*
      credit_sales_journal$sales_count)   
## average value of transaction
Delta <- .05*mu                    
## detect 5% amount intolerable error 
sigma <- 
  sd(credit_sales_journal$sales_unit_price*
       credit_sales_journal$sales_count)         
## variability  
effect <- Delta/sigma


sample <- pwr.t.test(
  d=effect, 
  sig.level = 0.05, 
  power = .8,
  type="one.sample", 
  alternative="greater")   ## look for sales value too large

cat("\n Attribute sample size for amount of error = ", ceiling(sample$n))

```

